name: CI/CD SafeBase with GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  IMAGE_NAME: safebase

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Installer PHP + Composer
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      # 3. Installer Node.js (pour builder Vite)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Installer les dépendances JS
      - name: Install NPM dependencies
        run: npm ci

      # 5. Builder les assets Vite
      - name: Build frontend assets
        run: npm run build

      # 6. Préparer un .env minimal pour CI
      - name: Prepare Laravel .env for CI
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env

      # 7. Générer la clé Laravel
      - name: Generate app key
        run: php artisan key:generate --force

      # 8. Lancer les tests Laravel
      - name: Run Laravel tests
        run: php artisan test

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest .

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:latest
